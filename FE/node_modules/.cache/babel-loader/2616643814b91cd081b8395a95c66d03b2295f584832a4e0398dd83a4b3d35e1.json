{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omarm\\\\Desktop\\\\Astrolap\\\\swappy-main\\\\src\\\\UserContext.js\",\n  _s = $RefreshSig$();\n// Importing functions to create and use a Context component\nimport React, { useReducer, createContext, useCallback } from 'react';\n\n// Create a Context component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\n\n// Declare actions for this component\nconst UPDATE_USER = \"UPDATE_USER\";\nconst LOGOUT_USER = \"LOGOUT_USER\";\n\n// Declare an initial state for the Context component (i.e, the global state)\nconst initialState = {\n  firstName: localStorage.getItem('firstName') || undefined,\n  lastName: localStorage.getItem('lastName') || undefined,\n  jsonwebtoken: localStorage.getItem('jsonwebtoken') || undefined,\n  loggedIn: localStorage.getItem('jsonwebtoken') && localStorage.getItem('jsonwebtoken') !== \"undefined\" || false,\n  email: localStorage.getItem('email') || undefined,\n  avatar: localStorage.getItem('avatar') || undefined\n};\n\n// The reducer that will change the (global) state\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  if (action.type === UPDATE_USER) {\n    return {\n      ...state,\n      ...action.payload\n    };\n  }\n  if (action.type === LOGOUT_USER) {\n    return {\n      ...action.payload\n    };\n  }\n};\n\n// Create the Provider component\nexport const UserContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  // Declare function to send payload to reducer\n  const updateUser = useCallback(payload => {\n    // Set the values in the user's computer\n    localStorage.setItem('firstName', payload.firstName);\n    localStorage.setItem('lastName', payload.lastName);\n    localStorage.setItem('email', payload.email);\n    localStorage.setItem('avatar', payload.avatar);\n    localStorage.setItem('jsonwebtoken', payload.jsonwebtoken);\n    dispatch({\n      type: UPDATE_USER,\n      payload: payload\n    });\n  }, [dispatch]);\n  const logoutUser = useCallback(payload => {\n    // Set the values in the user's computer\n    localStorage.setItem('firstName', null);\n    localStorage.setItem('lastName', null);\n    localStorage.setItem('email', null);\n    localStorage.setItem('avatar', null);\n    localStorage.setItem('jsonwebtoken', null);\n    dispatch({\n      type: LOGOUT_USER,\n      payload: payload\n    });\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      firstName: state.firstName,\n      lastName: state.lastName,\n      jsonwebtoken: state.jsonwebtoken,\n      loggedIn: state.loggedIn,\n      avatar: state.avatar,\n      email: state.email,\n      updateUser,\n      logoutUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_s(UserContextProvider, \"bjiHIVo3pH164hadDhfTmjPIabc=\");\n_c = UserContextProvider;\nvar _c;\n$RefreshReg$(_c, \"UserContextProvider\");","map":{"version":3,"names":["React","useReducer","createContext","useCallback","UserContext","UPDATE_USER","LOGOUT_USER","initialState","firstName","localStorage","getItem","undefined","lastName","jsonwebtoken","loggedIn","email","avatar","reducer","state","action","type","payload","UserContextProvider","children","dispatch","updateUser","setItem","logoutUser"],"sources":["C:/Users/omarm/Desktop/Astrolap/swappy-main/src/UserContext.js"],"sourcesContent":["// Importing functions to create and use a Context component\nimport React, { useReducer, createContext, useCallback } from 'react';\n\n// Create a Context component\nexport const UserContext = createContext();\n\n// Declare actions for this component\nconst UPDATE_USER = \"UPDATE_USER\";\nconst LOGOUT_USER = \"LOGOUT_USER\";\n\n// Declare an initial state for the Context component (i.e, the global state)\nconst initialState = {\n    firstName: localStorage.getItem('firstName') || undefined,\n    lastName: localStorage.getItem('lastName') || undefined,\n    jsonwebtoken: localStorage.getItem('jsonwebtoken') || undefined,\n    loggedIn: (localStorage.getItem('jsonwebtoken') && localStorage.getItem('jsonwebtoken') !== \"undefined\") || false,\n    email: localStorage.getItem('email') || undefined,\n    avatar: localStorage.getItem('avatar') || undefined\n}\n\n\n// The reducer that will change the (global) state\nconst reducer = (state=false, action) => {\n    if(action.type === UPDATE_USER) {\n        return {\n            ...state,\n            ...action.payload\n        }\n    }\n\n    if(action.type === LOGOUT_USER) {\n        return {\n            ...action.payload\n        }\n    }\n}\n\n\n// Create the Provider component\nexport const UserContextProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    // Declare function to send payload to reducer\n    const updateUser = useCallback(\n        (payload) => {\n\n            // Set the values in the user's computer\n            localStorage.setItem('firstName', payload.firstName);\n            localStorage.setItem('lastName', payload.lastName);\n            localStorage.setItem('email', payload.email);\n            localStorage.setItem('avatar', payload.avatar);\n            localStorage.setItem('jsonwebtoken', payload.jsonwebtoken);\n\n\n            dispatch(\n                {\n                    type: UPDATE_USER,\n                    payload: payload\n                }\n            )\n        }, [dispatch]\n    );\n\n    const logoutUser = useCallback(\n        (payload) => {\n\n            // Set the values in the user's computer\n            localStorage.setItem('firstName', null);\n            localStorage.setItem('lastName', null);\n            localStorage.setItem('email', null);\n            localStorage.setItem('avatar', null);\n            localStorage.setItem('jsonwebtoken', null);\n\n            dispatch(\n                {\n                    type: LOGOUT_USER,\n                    payload: payload\n                }\n            )\n        }, [dispatch]\n    );\n\n    return (\n        <UserContext.Provider \n            value={{\n                firstName: state.firstName,\n                lastName: state.lastName,\n                jsonwebtoken: state.jsonwebtoken,\n                loggedIn: state.loggedIn,\n                avatar: state.avatar,\n                email: state.email,\n                updateUser,\n                logoutUser\n            }}\n        >{children}\n        </UserContext.Provider>\n\n    )\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}