{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omarm\\\\Desktop\\\\Swappy\\\\swappy\\\\FE\\\\src\\\\ProductsScreen.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Button from '@mui/material/Button';\nimport { Link as ReactLink } from 'react-router-dom';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Grid from '@mui/material/Grid';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport ProductCard from \"./ProductCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  palette: {\n    primary: {\n      // Purple and green play nicely together.\n      main: '#006064'\n    },\n    Secondary: {\n      // This is green.A700 as hex.\n      main: '#00897b'\n    }\n  }\n});\nvar findData = new FormData();\nfindData.append('null', null);\nfunction ProductsScreen() {\n  _s();\n  var [formState, setFormState] = useState(null);\n  var [errorsState, setErrorsState] = useState([]);\n  const [productDetails, setproductDetails] = useState();\n  var data;\n\n  // Create a JS object like an HTML form element \n\n  useEffect(function () {\n    fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/products/find`, {\n      'method': 'POST'\n      // 'headers':{\n      //     'Authorization':`Bearer ${localStorage.getItem('jsonwebtoken')}`\n      // }\n    }).then(function (backendResponse) {\n      return backendResponse.json();\n    }).then(function (jsonResponse) {\n      setproductDetails(jsonResponse);\n    }).catch(function (backendError) {\n      console.log('backendEroor', backendError);\n    });\n  }, []);\n  data = productDetails;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-dark text-light text-center padding-y-4\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Product Listing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-lg-10 col-10 col-md-10 row mx-auto margin-y-1\",\n      children: products.map(createProductCard)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this)\n  // <ThemeProvider theme={theme}>\n  // <CssBaseline />\n\n  // <main>\n  //   {/* Hero unit */}\n  //   <Box\n  //     sx={{\n  //       bgcolor: 'background.paper',\n  //       pt: 8,\n  //       pb: 6,\n  //     }}\n  //   >\n  //     <Container maxWidth=\"sm\">\n  //       <Typography\n  //         component=\"h1\"\n  //         variant=\"h2\"\n  //         align=\"center\"\n  //         color=\"text.primary\"\n  //         gutterBottom\n  //       >\n  //         Album layout\n  //       </Typography>\n  //       <Typography variant=\"h5\" align=\"center\" color=\"text.secondary\" paragraph>\n  //         Something short and leading about the collection below—its contents,\n  //         the creator, etc. Make it short and sweet, but not too short so folks\n  //         don&apos;t simply skip over it entirely.\n  //       </Typography>\n  //       <Stack\n  //         sx={{ pt: 4 }}\n  //         direction=\"row\"\n  //         spacing={2}\n  //         justifyContent=\"center\"\n  //       >\n  //         <Button variant=\"contained\">Main call to action</Button>\n  //         <Button variant=\"outlined\">Secondary action</Button>\n  //       </Stack>\n  //     </Container>\n  //   </Box>\n  //   {/* End hero unit */}\n\n  //   <Container sx={{ py: 8 }} maxWidth=\"md\">\n\n  //   <Grid container spacing={4}>\n  //       {data?.map((product,i) => (\n  //         <Grid item key={i} xs={12} sm={6} md={4}>\n\n  //         <Card sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n\n  //         <CardMedia\n  //         component=\"img\"\n  //         sx={{\n  //           // 16:9\n  //           pt: '56.25%',\n  //         }}\n  //         image={product.picture}\n  //         alt=\"random\"\n  //         />\n\n  //                   <CardContent sx={{ flexGrow: 1 }}>\n  //                   <Typography gutterBottom variant=\"h5\" component=\"h2\">\n  //                   {product.name}\n  //                   </Typography>\n  //                   <Typography>\n  //                   {product.price}\n  //                   </Typography>\n  //                   </CardContent>\n  //           <CardActions>\n  //           <Box sx={{ opacity: [0, 0, 0],}}> {}</Box>\n  //             <Button\n  //             to={'/pupdate'}\n  //             component={ReactLink}\n  //             size=\"small\" >Edit</Button>\n\n  //           </CardActions>\n  //         </Card>\n  //       </Grid>\n  //       ))}\n  //     </Grid>\n\n  //   </Container>\n  // </main> \n\n  // </ThemeProvider>\n  ;\n}\n_s(ProductsScreen, \"MAAEQm2aAWoY3AQeVUB9mViRrbE=\");\n_c = ProductsScreen;\nexport { findData };\nexport default ProductsScreen;\nvar _c;\n$RefreshReg$(_c, \"ProductsScreen\");","map":{"version":3,"names":["useEffect","useState","Button","Link","ReactLink","Card","CardActions","CardContent","CardMedia","CssBaseline","Grid","Stack","Box","Typography","Container","createTheme","ThemeProvider","ProductCard","theme","palette","primary","main","Secondary","findData","FormData","append","ProductsScreen","formState","setFormState","errorsState","setErrorsState","productDetails","setproductDetails","data","fetch","process","env","REACT_APP_BACKEND_ENDPOINT","then","backendResponse","json","jsonResponse","catch","backendError","console","log","products","map","createProductCard"],"sources":["C:/Users/omarm/Desktop/Swappy/swappy/FE/src/ProductsScreen.js"],"sourcesContent":["import { useEffect,useState } from \"react\";\r\nimport Button from '@mui/material/Button';\r\nimport {Link as ReactLink} from 'react-router-dom';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Grid from '@mui/material/Grid';\r\nimport Stack from '@mui/material/Stack';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport ProductCard from \"./ProductCard\";\r\n\r\n\r\n\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n      primary: {\r\n        // Purple and green play nicely together.\r\n        main: '#006064',\r\n      },\r\n      Secondary: {\r\n        // This is green.A700 as hex.\r\n        main: '#00897b',\r\n      },\r\n    },\r\n  });\r\n\r\n\r\n\r\n  var findData = new FormData();\r\n  findData.append('null', null);\r\n\r\n\r\nfunction ProductsScreen() {\r\n\r\n\r\n\r\n\r\n\r\n  var [formState, setFormState] = useState(null);\r\n  var [errorsState, setErrorsState] = useState([]);\r\n  const [productDetails, setproductDetails]  = useState();\r\n\r\n  var data;\r\n  \r\n    \r\n\r\n\r\n\r\n\r\n\r\n    // Create a JS object like an HTML form element \r\n\r\n  useEffect(\r\n    function() {\r\n        fetch(\r\n            `${process.env.REACT_APP_BACKEND_ENDPOINT}/products/find`,\r\n        {\r\n            'method':'POST' ,\r\n            // 'headers':{\r\n            //     'Authorization':`Bearer ${localStorage.getItem('jsonwebtoken')}`\r\n            // }\r\n        }\r\n            )\r\n        .then(\r\n            function(backendResponse){\r\n                return backendResponse.json()\r\n            }\r\n        )\r\n        .then(\r\n            function(jsonResponse){\r\n                setproductDetails(jsonResponse);\r\n            }\r\n        )\r\n        .catch(\r\n            function(backendError){\r\n                console.log('backendEroor',backendError)\r\n            }\r\n        )\r\n    },\r\n    []\r\n  );\r\n\r\ndata=productDetails;\r\n\r\n\r\n  return (\r\n\r\n        <section>\r\n            \r\n            <div className=\"bg-dark text-light text-center padding-y-4\">\r\n                <h1>Product Listing</h1>\r\n            </div>\r\n\r\n            <div className=\"col-lg-10 col-10 col-md-10 row mx-auto margin-y-1\">\r\n                {products.map(createProductCard)}\r\n            </div>\r\n            \r\n        </section>\r\n    // <ThemeProvider theme={theme}>\r\n    // <CssBaseline />\r\n    \r\n    // <main>\r\n    //   {/* Hero unit */}\r\n    //   <Box\r\n    //     sx={{\r\n    //       bgcolor: 'background.paper',\r\n    //       pt: 8,\r\n    //       pb: 6,\r\n    //     }}\r\n    //   >\r\n    //     <Container maxWidth=\"sm\">\r\n    //       <Typography\r\n    //         component=\"h1\"\r\n    //         variant=\"h2\"\r\n    //         align=\"center\"\r\n    //         color=\"text.primary\"\r\n    //         gutterBottom\r\n    //       >\r\n    //         Album layout\r\n    //       </Typography>\r\n    //       <Typography variant=\"h5\" align=\"center\" color=\"text.secondary\" paragraph>\r\n    //         Something short and leading about the collection below—its contents,\r\n    //         the creator, etc. Make it short and sweet, but not too short so folks\r\n    //         don&apos;t simply skip over it entirely.\r\n    //       </Typography>\r\n    //       <Stack\r\n    //         sx={{ pt: 4 }}\r\n    //         direction=\"row\"\r\n    //         spacing={2}\r\n    //         justifyContent=\"center\"\r\n    //       >\r\n    //         <Button variant=\"contained\">Main call to action</Button>\r\n    //         <Button variant=\"outlined\">Secondary action</Button>\r\n    //       </Stack>\r\n    //     </Container>\r\n    //   </Box>\r\n    //   {/* End hero unit */}\r\n\r\n    //   <Container sx={{ py: 8 }} maxWidth=\"md\">\r\n        \r\n\r\n\r\n  \r\n    //   <Grid container spacing={4}>\r\n    //       {data?.map((product,i) => (\r\n    //         <Grid item key={i} xs={12} sm={6} md={4}>\r\n              \r\n            \r\n          \r\n    //         <Card sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n           \r\n            \r\n    //         <CardMedia\r\n    //         component=\"img\"\r\n    //         sx={{\r\n    //           // 16:9\r\n    //           pt: '56.25%',\r\n    //         }}\r\n    //         image={product.picture}\r\n    //         alt=\"random\"\r\n    //         />\r\n\r\n    //                   <CardContent sx={{ flexGrow: 1 }}>\r\n    //                   <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n    //                   {product.name}\r\n    //                   </Typography>\r\n    //                   <Typography>\r\n    //                   {product.price}\r\n    //                   </Typography>\r\n    //                   </CardContent>\r\n    //           <CardActions>\r\n    //           <Box sx={{ opacity: [0, 0, 0],}}> {}</Box>\r\n    //             <Button\r\n    //             to={'/pupdate'}\r\n    //             component={ReactLink}\r\n    //             size=\"small\" >Edit</Button>\r\n                \r\n    //           </CardActions>\r\n    //         </Card>\r\n    //       </Grid>\r\n    //       ))}\r\n    //     </Grid>\r\n\r\n\r\n\r\n    //   </Container>\r\n    // </main> \r\n\r\n    // </ThemeProvider>\r\n);\r\n\r\n}\r\nexport {findData};\r\nexport default ProductsScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}