{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omarm\\\\Desktop\\\\Swappy\\\\swappy\\\\FE\\\\src\\\\LoginScreen.js\",\n  _s = $RefreshSig$();\nimport { useState, useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { UserContext } from './UserContext.js';\nimport Alert from '@mui/material/Alert';\nimport Box from '@mui/material/Box';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport FormControl from '@mui/material/FormControl';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginScreen() {\n  _s();\n  // The states are: \n  // (1) null, (2) \"client error\", (3) \"backend error\", (4) \"loading\", (5) \"success\"\n\n  var [formState, setFormState] = useState(null);\n  var [errorsState, setErrorsState] = useState([]);\n  var {\n    loggedIn,\n    updateUser\n  } = useContext(UserContext);\n\n  // 1. Declare variables (not defined)\n  var emailField;\n  var passwordField;\n\n  // Create a JS object like an HTML form element \n  var formData = new FormData();\n  function login() {\n    // 2. Validate the fields\n    var errors = [];\n    if (emailField.value.length === 0) {\n      errors.push('Please enter your email');\n    }\n    if (passwordField.value.length === 0) {\n      errors.push('Please enter your password');\n    }\n\n    // 3. If any field is not validated, go to \"client error\"\n    if (errors.length > 0) {\n      setFormState(\"client error\");\n      setErrorsState(errors);\n    }\n\n    // 4. If all fields are valid\n    else {\n      // 5. Go to \"loading\"\n      setFormState(\"loading\");\n      setErrorsState([]);\n\n      // 6. Send data backend\n      formData.append('email', emailField.value);\n      formData.append('password', passwordField.value);\n      fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/users/login`, {\n        'method': 'POST',\n        'body': formData\n      }).then(function (backendResponse) {\n        // Convert the HTTP string response to JSON\n        return backendResponse.json();\n      }).then(\n      // 7. If backend sends success, go to \"success\"\n      function (jsonResponse) {\n        if (jsonResponse.status === \"ok\") {\n          console.log('backend response /users/login', jsonResponse);\n          setFormState(\"success\");\n\n          // Update the user context\n          updateUser({\n            \"email\": jsonResponse.message.email,\n            \"firstName\": jsonResponse.message.firstName,\n            \"lastName\": jsonResponse.message.lastName,\n            \"avatar\": jsonResponse.message.avatar,\n            \"jsonwebtoken\": jsonResponse.message.jsonwebtoken,\n            \"loggedIn\": true\n          });\n        } else {\n          setFormState(\"backend error\");\n        }\n      }).catch(\n      // 8. If backends sends error, go to \"backend error\"\n      function (backendError) {\n        console.log('backendError at /users/login', backendError);\n        setFormState(\"backend error\");\n      });\n    }\n  }\n  function addListItem(str) {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: str\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 16\n    }, this);\n  }\n  if (formState === \"success\") {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        pt: 8,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h2\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 4,\n        mb: 2,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          sx: {\n            mb: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            inputRef: function (thisElement) {\n              emailField = thisElement;\n            },\n            label: \"Email\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          sx: {\n            mb: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            inputRef: function (thisElement) {\n              passwordField = thisElement;\n            },\n            type: \"password\",\n            label: \"Password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        children: [formState !== \"loading\" && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: login,\n          size: \"large\",\n          variant: \"contained\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }, this), formState === \"loading\" && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        children: [formState === \"client error\" && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: errorsState.map(addListItem)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }, this), formState === \"success\" && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"success\",\n          children: \"You have logged in successfully!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(LoginScreen, \"tv1XIM1HjiDfpnnv+Ds1PLFi+PE=\");\n_c = LoginScreen;\nexport default LoginScreen;\nvar _c;\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"names":["useState","useContext","Route","Redirect","UserContext","Alert","Box","CircularProgress","FormControl","Button","Container","TextField","Typography","LoginScreen","formState","setFormState","errorsState","setErrorsState","loggedIn","updateUser","emailField","passwordField","formData","FormData","login","errors","value","length","push","append","fetch","process","env","REACT_APP_BACKEND_ENDPOINT","then","backendResponse","json","jsonResponse","status","console","log","message","email","firstName","lastName","avatar","jsonwebtoken","catch","backendError","addListItem","str","mb","thisElement","map"],"sources":["C:/Users/omarm/Desktop/Swappy/swappy/FE/src/LoginScreen.js"],"sourcesContent":["import { useState, useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { UserContext } from './UserContext.js';\nimport Alert from '@mui/material/Alert';\nimport Box from '@mui/material/Box';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport FormControl from '@mui/material/FormControl';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\n\n\nfunction LoginScreen() {\n\n    // The states are: \n    // (1) null, (2) \"client error\", (3) \"backend error\", (4) \"loading\", (5) \"success\"\n\n    var [formState, setFormState] = useState(null);\n    var [errorsState, setErrorsState] = useState([]);\n    var { loggedIn, updateUser } = useContext(UserContext);\n\n\n    // 1. Declare variables (not defined)\n    var emailField;\n    var passwordField;\n\n     \n    // Create a JS object like an HTML form element \n    var formData = new FormData();\n\n    function login() {\n\n\n        // 2. Validate the fields\n        var errors = [];\n\n        if(emailField.value.length === 0) {\n            errors.push('Please enter your email');\n        }\n\n        if(passwordField.value.length === 0) {\n            errors.push('Please enter your password');\n        }\n\n        // 3. If any field is not validated, go to \"client error\"\n        if( errors.length > 0 ) {\n            setFormState(\"client error\");\n            setErrorsState( errors );\n        }\n\n        // 4. If all fields are valid\n        else {\n            // 5. Go to \"loading\"\n            setFormState(\"loading\");\n            setErrorsState([]);\n\n            // 6. Send data backend\n            formData.append('email', emailField.value);\n            formData.append('password', passwordField.value);\n\n            fetch(\n                `${process.env.REACT_APP_BACKEND_ENDPOINT}/users/login`,\n                {\n                    'method': 'POST',\n                    'body': formData\n                }\n            )\n            .then(\n                function(backendResponse) {\n                    // Convert the HTTP string response to JSON\n                    return backendResponse.json();\n                }\n            )\n            .then(\n                // 7. If backend sends success, go to \"success\"\n                function(jsonResponse) {\n                    if(jsonResponse.status === \"ok\") {\n                        console.log('backend response /users/login', jsonResponse)\n                        setFormState(\"success\");\n\n                        // Update the user context\n                        updateUser(\n                            {\n                                \"email\": jsonResponse.message.email,\n                                \"firstName\": jsonResponse.message.firstName,\n                                \"lastName\": jsonResponse.message.lastName,\n                                \"avatar\": jsonResponse.message.avatar,\n                                \"jsonwebtoken\": jsonResponse.message.jsonwebtoken,\n                                \"loggedIn\": true\n                            }\n                        )\n                    }\n                    else {\n                        setFormState(\"backend error\");\n                    }\n                }\n            )\n            .catch(\n                // 8. If backends sends error, go to \"backend error\"\n                function(backendError) {\n                    console.log('backendError at /users/login', backendError)\n                    setFormState(\"backend error\");\n                }\n            )\n        }\n    }\n\n    function addListItem(str) {\n        return <li>{str}</li>\n    }\n\n    if(formState === \"success\") {\n        return (\n            <Redirect to=\"/\" />\n        )\n    }\n    else {\n        return (\n            <Container maxWidth=\"sm\">\n                <Box pt={8}>\n                    <Typography component=\"h1\" variant=\"h2\">\n                        Login\n                    </Typography>\n                </Box>\n\n                <Box mt={4} mb={2}>\n                    <FormControl fullWidth sx={{ mb: 2 }}>\n                        <TextField \n                        inputRef={ \n                            function( thisElement ){\n                                emailField = thisElement;\n                            } \n                        }\n                        label=\"Email\" required={true}/>\n                    </FormControl>\n\n                    <FormControl fullWidth sx={{ mb: 2 }}>\n                        <TextField \n                        inputRef={ \n                            function( thisElement ){\n                                passwordField = thisElement;\n                            } \n                        }\n                        type=\"password\"\n                        label=\"Password\" required={true} />\n                    </FormControl>\n                </Box>\n\n                <Box display=\"flex\">\n                    \n                    {\n                        formState !== \"loading\" &&\n                        <Button onClick={login} size=\"large\" variant=\"contained\">Send</Button>\n                    }\n                    \n                    {\n                        formState === \"loading\" &&\n                        <CircularProgress />\n                    }\n                </Box>\n\n                <Box mt={2}>\n\n                    { \n                        formState === \"client error\" &&\n                        <Alert severity=\"error\">\n                            <ul>\n                            {\n                                errorsState.map(addListItem)\n                            }\n                            </ul>\n                        </Alert>\n                    }\n\n                    {\n                        formState === \"success\" &&\n                        <Alert severity=\"success\">\n                            You have logged in successfully!\n                        </Alert>\n                    }\n                </Box>\n            </Container>\n        )\n    }\n\n}\n\nexport default LoginScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}