{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omarm\\\\Desktop\\\\Astrolap\\\\swappy-main\\\\src\\\\RegistrationScreen.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Alert from '@mui/material/Alert';\nimport Box from '@mui/material/Box';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport FormControl from '@mui/material/FormControl';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { grey } from '@mui/material/colors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  palette: {\n    primary: {\n      // Purple and green play nicely together.\n      main: grey[900]\n    },\n    Secondary: {\n      // This is green.A700 as hex.\n      main: '#222831'\n    }\n  }\n});\nfunction RegistrationScreen() {\n  _s();\n  // The states are: \n  // (1) null, (2) \"client error\", (3) \"loading\", (4) \"backend error\", (5) \"success\"\n  var [formState, setFormState] = useState(null);\n  var [errorsState, setErrorsState] = useState([]);\n\n  // 1. Declare variables (not defined)\n  var firstNameField;\n  var lastNameField;\n  var emailField;\n  var passwordField;\n  var avatarField;\n\n  // Create a JS object like an HTML form element \n  var formData = new FormData();\n  function attachFile(evt) {\n    console.log('file data', evt.target.files);\n    // Creating an array from the files attached by user\n    var files = Array.from(evt.target.files);\n    files.forEach(function (fileAttachment, index) {\n      formData.append(index, fileAttachment);\n    });\n  }\n  function register() {\n    // 2. Validate the fields\n    var errors = [];\n    if (firstNameField.value.length === 0) {\n      errors.push('Please enter your first name');\n    }\n    if (lastNameField.value.length === 0) {\n      errors.push('Please enter your last name');\n    }\n    if (emailField.value.length === 0) {\n      errors.push('Please enter your email');\n    }\n    if (passwordField.value.length === 0) {\n      errors.push('Please enter your password');\n    }\n\n    // 3. If any field is not validated, go to \"client error\"\n    if (errors.length > 0) {\n      setFormState(\"client error\");\n      setErrorsState(errors);\n    }\n\n    // 4. If all fields are valid\n    else {\n      // 5. Go to \"loading\"\n      setFormState(\"loading\");\n      setErrorsState([]);\n\n      // 6. Send data backend\n      formData.append('firstName', firstNameField.value);\n      formData.append('lastName', lastNameField.value);\n      formData.append('email', emailField.value);\n      formData.append('password', passwordField.value);\n      fetch(`${process.env.REACT_APP_BACKEND_ENDPOINT}/users/register`, {\n        'method': 'POST',\n        'body': formData\n      }).then(function (backendResponse) {\n        // Convert the HTTP string response to JSON\n        return backendResponse.json();\n      }).then(\n      // 7. If backend sends success, go to \"success\"\n      function (jsonResponse) {\n        if (jsonResponse.status === \"ok\") {\n          console.log('backend response /users/register', jsonResponse);\n          setFormState(\"success\");\n        } else {\n          setFormState(\"backend error\");\n          setErrorsState([jsonResponse.message]);\n        }\n      }).catch(\n      // 8. If backends sends error, go to \"backend error\"\n      function (backendError) {\n        console.log('backendError at /users/register', backendError);\n        setFormState(\"backend error\");\n      });\n    }\n  }\n  function addListItem(str) {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: str\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        pt: 8,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h2\",\n          children: \"Registration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 4,\n        mb: 2,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          sx: {\n            mb: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            inputRef: function (thisElement) {\n              firstNameField = thisElement;\n            },\n            label: \"Firstname\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          sx: {\n            mb: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            inputRef: function (thisElement) {\n              lastNameField = thisElement;\n            },\n            label: \"Lastname\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          sx: {\n            mb: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            inputRef: function (thisElement) {\n              emailField = thisElement;\n            },\n            label: \"Email\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          sx: {\n            mb: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            inputRef: function (thisElement) {\n              passwordField = thisElement;\n            },\n            type: \"password\",\n            label: \"Password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 4,\n        mb: 4,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"p\",\n          variant: \"body1\",\n          gutterBottom: true,\n          children: \"Upload your profile picture (optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          component: \"label\",\n          variant: \"contained\",\n          color: \"primary\",\n          children: [\"Upload\", /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: function (thisElement) {\n              avatarField = thisElement;\n            },\n            onClick: attachFile,\n            onChange: attachFile,\n            hidden: true,\n            accept: \"image/*\",\n            multiple: true,\n            type: \"file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        children: [formState !== \"loading\" && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: register,\n          size: \"large\",\n          variant: \"contained\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this), formState === \"loading\" && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        children: [formState === \"client error\" && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: errorsState.map(addListItem)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, this), formState === \"backend error\" && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: errorsState.map(addListItem)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }, this), formState === \"success\" && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"success\",\n          children: \"You have registered successfully!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 9\n  }, this);\n}\n_s(RegistrationScreen, \"lHaErImOtICikz5gPr+O+fRi09Y=\");\n_c = RegistrationScreen;\nexport default RegistrationScreen;\nvar _c;\n$RefreshReg$(_c, \"RegistrationScreen\");","map":{"version":3,"names":["useState","Alert","Box","CircularProgress","FormControl","Button","Container","TextField","Typography","createTheme","ThemeProvider","grey","theme","palette","primary","main","Secondary","RegistrationScreen","formState","setFormState","errorsState","setErrorsState","firstNameField","lastNameField","emailField","passwordField","avatarField","formData","FormData","attachFile","evt","console","log","target","files","Array","from","forEach","fileAttachment","index","append","register","errors","value","length","push","fetch","process","env","REACT_APP_BACKEND_ENDPOINT","then","backendResponse","json","jsonResponse","status","message","catch","backendError","addListItem","str","mb","thisElement","map"],"sources":["C:/Users/omarm/Desktop/Astrolap/swappy-main/src/RegistrationScreen.js"],"sourcesContent":["import { useState } from 'react';\nimport Alert from '@mui/material/Alert';\nimport Box from '@mui/material/Box';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport FormControl from '@mui/material/FormControl';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { grey } from '@mui/material/colors';\n\nconst theme = createTheme({\n    palette: {\n      primary: {\n        // Purple and green play nicely together.\n        main: grey[900],\n      },\n      Secondary: {\n        // This is green.A700 as hex.\n        main: '#222831',\n      },\n    },\n  });\n\n\nfunction RegistrationScreen() {\n\n    // The states are: \n    // (1) null, (2) \"client error\", (3) \"loading\", (4) \"backend error\", (5) \"success\"\n    var [formState, setFormState] = useState(null);\n    var [errorsState, setErrorsState] = useState([]);\n\n\n    // 1. Declare variables (not defined)\n    var firstNameField;\n    var lastNameField;\n    var emailField;\n    var passwordField;\n    var avatarField;\n\n     \n    // Create a JS object like an HTML form element \n    var formData = new FormData();\n\n    function attachFile(evt) {\n\n        console.log('file data', evt.target.files)\n        // Creating an array from the files attached by user\n        var files = Array.from(evt.target.files);\n\n        files.forEach(\n            function(fileAttachment, index) {\n                formData.append(index, fileAttachment);\n            }\n        )\n    }\n\n\n    function register() {\n\n\n        // 2. Validate the fields\n        var errors = [];\n\n        if(firstNameField.value.length === 0) {\n            errors.push('Please enter your first name');\n        }\n\n        if(lastNameField.value.length === 0) {\n            errors.push('Please enter your last name');\n        }\n\n        if(emailField.value.length === 0) {\n            errors.push('Please enter your email');\n        }\n\n        if(passwordField.value.length === 0) {\n            errors.push('Please enter your password');\n        }\n\n        // 3. If any field is not validated, go to \"client error\"\n        if( errors.length > 0 ) {\n            setFormState(\"client error\");\n            setErrorsState( errors );\n        }\n\n        // 4. If all fields are valid\n        else {\n            // 5. Go to \"loading\"\n            setFormState(\"loading\");\n            setErrorsState([]);\n\n            // 6. Send data backend\n            formData.append('firstName', firstNameField.value);\n            formData.append('lastName', lastNameField.value);\n            formData.append('email', emailField.value);\n            formData.append('password', passwordField.value);\n\n            fetch(\n                `${process.env.REACT_APP_BACKEND_ENDPOINT}/users/register`,\n                {\n                    'method': 'POST',\n                    'body': formData\n                }\n            )\n            .then(\n                function(backendResponse) {\n                    // Convert the HTTP string response to JSON\n                    return backendResponse.json();\n                }\n            )\n            .then(\n                // 7. If backend sends success, go to \"success\"\n                function(jsonResponse) {\n                    if(jsonResponse.status === \"ok\") {\n                        console.log('backend response /users/register', jsonResponse)\n                        setFormState(\"success\");\n                    }\n                    else {\n                        setFormState(\"backend error\");\n                        setErrorsState([jsonResponse.message]);\n                    }\n                }\n            )\n            .catch(\n                // 8. If backends sends error, go to \"backend error\"\n                function(backendError) {\n                    console.log('backendError at /users/register', backendError)\n                    setFormState(\"backend error\");\n                }\n            )\n        }\n    }\n\n    function addListItem(str) {\n        return <li>{str}</li>\n    }\n\n    return (\n        <ThemeProvider>\n        <Container maxWidth=\"sm\">\n            <Box pt={8}>\n                <Typography component=\"h1\" variant=\"h2\">\n                    Registration\n                </Typography>\n            </Box>\n\n            <Box mt={4} mb={2}>\n                <FormControl fullWidth sx={ { mb: 2 } }>\n                    <TextField \n                    inputRef={ \n                        function( thisElement ){\n                            firstNameField = thisElement;\n                        } \n                    }\n                    label=\"Firstname\" required={true}/>\n                </FormControl>\n\n                <FormControl fullWidth sx={{ mb: 2 }}>\n                   <TextField \n                   inputRef={ \n                        function( thisElement ){\n                            lastNameField = thisElement;\n                        } \n                    }\n                   label=\"Lastname\" required={true}/>\n                </FormControl>\n\n                <FormControl fullWidth sx={{ mb: 2 }}>\n                    <TextField \n                    inputRef={ \n                        function( thisElement ){\n                            emailField = thisElement;\n                        } \n                    }\n                    label=\"Email\" required={true}/>\n                </FormControl>\n\n                <FormControl fullWidth sx={{ mb: 2 }}>\n                    <TextField \n                    inputRef={ \n                        function( thisElement ){\n                            passwordField = thisElement;\n                        } \n                    }\n                    type=\"password\"\n                    label=\"Password\" required={true} />\n                </FormControl>\n            </Box>\n            \n            <Box mt={4} mb={4}>\n\n                <Typography component=\"p\" variant=\"body1\" gutterBottom>\n                    Upload your profile picture (optional)\n                </Typography>\n\n                <br/>\n\n                <Button size=\"small\" component=\"label\" variant=\"contained\" color=\"primary\">\n                    Upload\n                    <input \n                        ref={function(thisElement){ avatarField = thisElement }} \n                        onClick={attachFile}\n                        onChange={attachFile}\n                        hidden accept=\"image/*\" \n                        multiple type=\"file\" \n                    />\n                </Button>\n\n            </Box>\n\n\n            <Box display=\"flex\">\n                \n                {\n                    formState !== \"loading\" &&\n                    <Button onClick={register} size=\"large\" variant=\"contained\">Send</Button>\n                }\n                \n                {\n                    formState === \"loading\" &&\n                    <CircularProgress />\n                }\n            </Box>\n\n            <Box mt={2}>\n\n                { \n                    formState === \"client error\" &&\n                    <Alert severity=\"error\">\n                        <ul>\n                        {\n                            errorsState.map(addListItem)\n                        }\n                        </ul>\n                    </Alert>\n                }\n\n                { \n                    formState === \"backend error\" &&\n                    <Alert severity=\"error\">\n                        <ul>\n                        {\n                            errorsState.map(addListItem)\n                        }\n                        </ul>\n                    </Alert>\n                }\n\n                {\n                    formState === \"success\" &&\n                    <Alert severity=\"success\">\n                        You have registered successfully!\n                    </Alert>\n                }\n            </Box>\n           \n        </Container>\n        </ThemeProvider>\n    )\n\n}\n\nexport default RegistrationScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}